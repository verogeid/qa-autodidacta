Semana 8: Manejo avanzado de formularios

Esta semana profundizaremos en formularios con múltiples campos y validación simple.

Vamos a crear un formulario con nombre, email y contraseña.

Escribe:

import React, { useState } from 'react'

function App() {
  const [form, setForm] = useState({ nombre: '', email: '', password: '' })
  const [error, setError] = useState('')

  function manejarCambio(e) {
    setForm({ ...form, [e.target.name]: e.target.value })
  }

  function manejarEnvio(e) {
    e.preventDefault()
    if (!form.nombre || !form.email || !form.password) {
      setError('Todos los campos son obligatorios')
    } else {
      setError('')
      alert(`Registro exitoso: ${form.nombre}`)
    }
  }

  return (
    <form onSubmit={manejarEnvio}>
      <input name="nombre" placeholder="Nombre" value={form.nombre} onChange={manejarCambio} />
      <input name="email" placeholder="Email" value={form.email} onChange={manejarCambio} />
      <input name="password" type="password" placeholder="Contraseña" value={form.password} onChange={manejarCambio} />
      {error && <p style={{ color: 'red' }}>{error}</p>}
      <button type="submit">Registrar</button>
    </form>
  )
}

export default App

Explicación:

Usamos un solo estado para manejar todos los campos.

La función manejarCambio actualiza el campo correspondiente según su nombre.

Validamos que ningún campo esté vacío antes de enviar.

Resumen:

Formularios complejos se pueden manejar fácilmente con estados y controlando eventos.

La validación básica mejora la experiencia del usuario.